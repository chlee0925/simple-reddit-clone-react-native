// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders TopicListScreen Component 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 1,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 4,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 1,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 5,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 6,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 3`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 7,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 4`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 8,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 5`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 9,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 6`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 10,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 7`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 11,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 8`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 12,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 9`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 13,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 10`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 14,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 11`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 15,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 12`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 16,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 13`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 17,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 14`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 18,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 15`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 19,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 16`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 19,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 20,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 19,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 17`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 20,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 19,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 21,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 20,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 19,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 18`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 21,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 20,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 19,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 22,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 21,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 20,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 19,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 19`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 22,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 21,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 19,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 20,
          "topic": "test topic",
          "upvote": 0,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 23,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 22,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 21,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 19,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 20,
            "topic": "test topic",
            "upvote": 0,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 20`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 23,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 22,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 19,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 20,
          "topic": "test topic",
          "upvote": 0,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 24,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 23,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 22,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 19,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 20,
            "topic": "test topic",
            "upvote": 0,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test createTopic 21`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 24,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 5,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 6,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 7,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 4,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 12,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 14,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 16,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 18,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 23,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 10,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 13,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 8,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 15,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 9,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 17,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 11,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 19,
          "topic": "test topic",
          "upvote": 0,
        },
        Object {
          "downvote": 0,
          "key": 20,
          "topic": "test topic",
          "upvote": 0,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 25,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 24,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 5,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 6,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 7,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 4,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 12,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 14,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 16,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 18,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 23,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 10,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 13,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 8,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 15,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 9,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 17,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 11,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 19,
            "topic": "test topic",
            "upvote": 0,
          },
          Object {
            "downvote": 0,
            "key": 20,
            "topic": "test topic",
            "upvote": 0,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              3
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              4
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              5
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              6
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              7
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              8
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            test topic
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              9
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`test downvote 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 2,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 4,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 2,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              0
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`test downvote 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 3,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 4,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 3,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              3
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`test downvote 3`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 4,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 4,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 4,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`test upvote 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 1,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 1,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 4,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 1,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 1,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`test upvote 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 5,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 2,
        },
        Object {
          "downvote": 1,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
        Object {
          "downvote": 2,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "newKey": 4,
        "otherTopics": Object {
          "add": [Function],
          "clear": [Function],
          "contains": [Function],
          "equals": [Function],
          "forEach": [Function],
          "isEmpty": [Function],
          "peek": [Function],
          "removeRoot": [Function],
          "size": [Function],
          "toArray": [Function],
        },
        "topTopics": Array [
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 2,
          },
          Object {
            "downvote": 1,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
          Object {
            "downvote": 2,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              2
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f2f2f2",
              "borderBottomWidth": 2,
              "borderColor": "#cccccc",
              "borderTopWidth": 1,
              "flex": 1,
              "marginBottom": 5,
              "padding": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              2
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 13,
                  "fontWeight": "bold",
                }
              }
            >
              Vote Sum: 
              -1
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
