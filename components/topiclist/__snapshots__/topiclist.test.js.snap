// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders TopicListScreen Component 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          + Create a new topic
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "downvote": 1,
          "key": 2,
          "topic": "Help! I just dropped my phone into the pool.",
          "upvote": 2,
        },
        Object {
          "downvote": 4,
          "key": 3,
          "topic": "Best ways to bargain with sellers in Carousell",
          "upvote": 1,
        },
        Object {
          "downvote": 0,
          "key": 1,
          "topic": "I am looking for good restaurants in town",
          "upvote": 0,
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "data": Array [
          Object {
            "downvote": 1,
            "key": 2,
            "topic": "Help! I just dropped my phone into the pool.",
            "upvote": 2,
          },
          Object {
            "downvote": 4,
            "key": 3,
            "topic": "Best ways to bargain with sellers in Carousell",
            "upvote": 1,
          },
          Object {
            "downvote": 0,
            "key": 1,
            "topic": "I am looking for good restaurants in town",
            "upvote": 0,
          },
        ],
        "newKey": 4,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#e3b5bc",
              "flex": 1,
              "marginBottom": 3,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Help! I just dropped my phone into the pool.
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              1
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#e3b5bc",
              "flex": 1,
              "marginBottom": 3,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            Best ways to bargain with sellers in Carousell
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              1
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              4
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#e3b5bc",
              "flex": 1,
              "marginBottom": 3,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Topic: 
            I am looking for good restaurants in town
          </Text>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              index: 
              2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              upvote: 
              0
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              downvote: 
              0
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Up
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType="button"
              accessibilityLabel={undefined}
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={undefined}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Vote Down
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
